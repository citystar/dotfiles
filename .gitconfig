[user]
	name = Shixin Chen
	email = citystar@gmail.com
[core]
	editor = vim
	autocrlf = input
	pager = lv -c
	quotepath = false
	hooksPath = ~/Projects/dotfiles/.git-hooks
[color]
	ui = auto
	interactive = auto
[branch]
	# autosetuprebase = always
[push]
	default = current
[merge]
	# ff = false
[pull]
	rebase = true
[diff]
  # tool = icdiff
[difftool]
  prompt = false
[difftool "icdiff"]
  cmd = /usr/local/bin/icdiff --line-numbers $LOCAL $REMOTE
[pager]
  difftool = true
[alias]
	# @see http://oli.jp/2012/git-powerup/
	# @see http://blog.blindgaenger.net/advanced_git_aliases.html
	st = status -sb
	#sh = show
	#so = remote show origin
	#ft = fetch
	#up = pull --rebase
	#rbm = rebase master      # masterへのrebase
	#ad = add
	#ci = commit
	#cam = commit -a --amend  # 直前のcommitを修正
	#co = checkout
	# branch
	#br = branch
	#ba = branch -a
	#bm = branch --merged
	#bn = branch --no-merged
	#delete-merged-branches = !git branch --merged | grep -Ev '\\*|master|develop|staging' | xargs -I % git branch -d %
	# log
	#wc = whatchanged
	#l = log --decorate
	#lp = log --decorate --stat --patch
	#la = log --pretty=\"format:%ad %h (%an): %s\" --date=short
	#lr = log origin
	#oneline = log --pretty=oneline
	#ranking = shortlog -s -n --no-merges
	#loggraph = log --graph --date=short --pretty=format:'%Cgreen%h %cd %Cblue%cn %Creset%s'
	#logall = log --graph --all --color --pretty='%x09%h %cn%x09%s %Cred%d%Creset'
	l = log --graph --name-status --pretty=format:\"%C(green)[%h] %C(yellow)(%ai) %C(cyan)%an %Creset%s %C(yellow)%d%Creset\"
	# diff
	#d = diff
	#dm = diff master
	#dw = diff --color-words
	#dc = diff --cached
	#ds = diff --staged
	#d1 = diff HEAD~
	#d2 = diff HEAD~~
	#d3 = diff HEAD~~~
	#d4 = diff HEAD~~~~
	#d5 = diff HEAD~~~~~
	#edit-unmerged = "!f() { git ls-files --unmerged | cut -f2 | sort -u ; }; vim `f`"
	#add-unmerged = "!f() { git ls-files --unmerged | cut -f2 | sort -u ; }; git add `f`"
	# grep関連
	gr = grep -n -p --color --heading --break
	# submodule
	#su = submodule update
	#sui = submodule update --init
	# other
	#fixup = commit --amend -C HEAD
	# show pull request
	showpr = !"f() { git log --merges --oneline --reverse --ancestry-path $1...${2:-'develop'} | grep 'Merge pull request #' | head -n 1; }; f"
	# open pull request
	openpr = "!f() { hub browse -- `git log --merges --oneline --reverse --ancestry-path $1...${2:-'develop'} | grep 'Merge pull request #' | head -n 1 | cut -f5 -d' ' | sed -e 's%#%pull/%'`; }; f"
[hub]
	protocol = https
[filter "media"]
	#clean = git media clean %f
	#smudge = git media smudge %f
	#required = true
[credential]
[filter "lfs"]
	clean = git-lfs clean %f
	smudge = git-lfs smudge %f
	required = true
[commit]
#	template = ~/.stCommitMsg
