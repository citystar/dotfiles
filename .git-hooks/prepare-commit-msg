#!/bin/sh

# This way you can customize which branches should be skipped when
# prepending commit message.
if [ -z "$BRANCHES_TO_SKIP" ]; then
  BRANCHES_TO_SKIP=(master)
fi

# Get current branch name
BRANCH_NAME=$(git symbolic-ref --short HEAD)
# Get text behind the last / of the branch path
BRANCH_NAME="${BRANCH_NAME##*/}"

BRANCH_EXCLUDED=$(printf "%s\n" "${BRANCHES_TO_SKIP[@]}" | grep -c "^$BRANCH_NAME$")
BRANCH_IN_COMMIT=$(grep -c "\[$BRANCH_NAME\]" $1)

if [ -n "$BRANCH_NAME" ] && ! [[ $BRANCH_EXCLUDED -eq 1 ]] && ! [[ $BRANCH_IN_COMMIT -ge 1 ]] && [[ "${BRANCH_NAME}" =~ ([pP][lL][tT]-([[:digit:]]+)([-_].*)?) ]]
then
  sed -i.bak -e "1s/^/PLT-${BASH_REMATCH[2]}: /" $1
fi
